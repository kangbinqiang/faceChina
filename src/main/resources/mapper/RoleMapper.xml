<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="test.IDao.RoleDOMapper" >
  <resultMap id="BaseResultMap" type="test.domain.RoleDO" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="ROLE_ID" property="roleId" jdbcType="VARCHAR" />
    <result column="ROLE_NAME" property="roleName" jdbcType="VARCHAR" />
    <result column="ROLE_DESCRIPTION" property="roleDescription" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="test.domain.RoleDO" extends="BaseResultMap" >
    <result column="ROLE_CREATETIME" property="roleCreatetime" jdbcType="VARBINARY" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, ROLE_ID, ROLE_NAME, ROLE_DESCRIPTION
  </sql>
  <sql id="Blob_Column_List" >
    ROLE_CREATETIME
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ROLE
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ROLE
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="test.domain.RoleDO" >
    insert into ROLE (ID, ROLE_ID, ROLE_NAME, 
      ROLE_DESCRIPTION, ROLE_CREATETIME)
    values (#{id,jdbcType=INTEGER}, #{roleId,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR}, 
      #{roleDescription,jdbcType=VARCHAR}, #{roleCreatetime,jdbcType=VARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="test.domain.RoleDO" >
    insert into ROLE
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="roleId != null" >
        ROLE_ID,
      </if>
      <if test="roleName != null" >
        ROLE_NAME,
      </if>
      <if test="roleDescription != null" >
        ROLE_DESCRIPTION,
      </if>
      <if test="roleCreatetime != null" >
        ROLE_CREATETIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDescription != null" >
        #{roleDescription,jdbcType=VARCHAR},
      </if>
      <if test="roleCreatetime != null" >
        #{roleCreatetime,jdbcType=VARBINARY},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="test.domain.RoleDO" >
    update ROLE
    <set >
      <if test="roleId != null" >
        ROLE_ID = #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null" >
        ROLE_NAME = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDescription != null" >
        ROLE_DESCRIPTION = #{roleDescription,jdbcType=VARCHAR},
      </if>
      <if test="roleCreatetime != null" >
        ROLE_CREATETIME = #{roleCreatetime,jdbcType=VARBINARY},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="test.domain.RoleDO" >
    update ROLE
    set ROLE_ID = #{roleId,jdbcType=VARCHAR},
      ROLE_NAME = #{roleName,jdbcType=VARCHAR},
      ROLE_DESCRIPTION = #{roleDescription,jdbcType=VARCHAR},
      ROLE_CREATETIME = #{roleCreatetime,jdbcType=VARBINARY}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="test.domain.RoleDO" >
    update ROLE
    set ROLE_ID = #{roleId,jdbcType=VARCHAR},
      ROLE_NAME = #{roleName,jdbcType=VARCHAR},
      ROLE_DESCRIPTION = #{roleDescription,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>